{"ast":null,"code":"'use strict';\n\nvar Cache = require('./cache');\n\nvar assign = require('lodash.assign');\n\nvar cloneDeep = require('lodash.clonedeep');\n\nfunction getHeaderValue(headers, name) {\n  var value;\n  Object.keys(headers || {}).forEach(function (key) {\n    if (key.toLowerCase() === name) {\n      value = headers[key];\n    }\n  });\n  return value;\n}\n\nfunction parseParameters(uri, options, callback) {\n  if (typeof options === 'object') {\n    return {\n      options: assign(options, {\n        uri: uri\n      }),\n      callback: callback\n    };\n  }\n\n  if (typeof uri === 'string') {\n    if (typeof callback === 'function') {\n      return {\n        options: {\n          uri: uri\n        },\n        callback: callback\n      };\n    }\n\n    return {\n      options: {\n        uri: uri\n      },\n      callback: options\n    };\n  }\n\n  return {\n    options: uri,\n    callback: options\n  };\n}\n\nfunction getHttpClient(cache, wrappedHttpClient) {\n  function httpClient(uri, options, callback) {\n    var parameters = parseParameters(uri, options, callback);\n\n    if (parameters.options.method && parameters.options.method.toLowerCase() !== 'get') {\n      return wrappedHttpClient(parameters.options, parameters.callback);\n    }\n\n    parameters.options.headers = parameters.options.headers || {};\n\n    if (getHeaderValue(parameters.options.headers, 'cookie')) {\n      return wrappedHttpClient(parameters.options, parameters.callback);\n    }\n\n    var cacheKey = cloneDeep(parameters.options);\n    var cacheHit = cache.get(cacheKey);\n\n    if (cacheHit) {\n      parameters.options.headers['If-None-Match'] = cacheHit.etag;\n    }\n\n    return wrappedHttpClient(parameters.options, function (error, response, body) {\n      if (!error) {\n        if (response.statusCode === 200) {\n          var etag = getHeaderValue(response.headers, 'etag');\n\n          if (etag) {\n            cache.set(cacheKey, {\n              data: cloneDeep(body),\n              etag: etag\n            });\n          }\n        }\n\n        if (response.statusCode === 304) {\n          body = cloneDeep(cacheHit.data);\n        }\n      }\n\n      parameters.callback(error, response, body);\n    });\n  }\n\n  httpClient.reset = cache.reset;\n  return httpClient;\n}\n\nfunction Request(cacheConfig, baseHttpClient) {\n  var cache = new Cache(cacheConfig);\n\n  var wrappedHttpClient = baseHttpClient || require('request');\n\n  return getHttpClient(cache, wrappedHttpClient);\n}\n\nmodule.exports = Request;","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/request-etag/lib/request-etag.js"],"names":["Cache","require","assign","cloneDeep","getHeaderValue","headers","name","value","Object","keys","forEach","key","toLowerCase","parseParameters","uri","options","callback","getHttpClient","cache","wrappedHttpClient","httpClient","parameters","method","cacheKey","cacheHit","get","etag","error","response","body","statusCode","set","data","reset","Request","cacheConfig","baseHttpClient","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Cache = require('./cache');\r\nvar assign = require('lodash.assign');\r\nvar cloneDeep = require('lodash.clonedeep');\r\n\r\nfunction getHeaderValue(headers, name) {\r\n  var value;\r\n  Object.keys(headers || {}).forEach(function (key) {\r\n    if (key.toLowerCase() === name) {\r\n      value = headers[key];\r\n    }\r\n  });\r\n  return value;\r\n}\r\n\r\nfunction parseParameters(uri, options, callback) {\r\n  if (typeof options === 'object') {\r\n    return {\r\n      options: assign(options, { uri: uri }),\r\n      callback: callback\r\n    };\r\n  }\r\n  if (typeof uri === 'string') {\r\n    if (typeof callback === 'function') {\r\n      return {\r\n        options: { uri: uri },\r\n        callback: callback\r\n      };\r\n    }\r\n    return {\r\n      options: { uri: uri },\r\n      callback: options\r\n    };\r\n  }\r\n  return {\r\n    options: uri,\r\n    callback: options\r\n  };\r\n}\r\n\r\nfunction getHttpClient(cache, wrappedHttpClient) {\r\n  function httpClient(uri, options, callback) {\r\n    var parameters = parseParameters(uri, options, callback);\r\n    if (parameters.options.method && parameters.options.method.toLowerCase() !== 'get') {\r\n      return wrappedHttpClient(parameters.options, parameters.callback);\r\n    }\r\n\r\n    parameters.options.headers = parameters.options.headers || {};\r\n    if (getHeaderValue(parameters.options.headers, 'cookie')) {\r\n      return wrappedHttpClient(parameters.options, parameters.callback);\r\n    }\r\n\r\n    var cacheKey = cloneDeep(parameters.options);\r\n    var cacheHit = cache.get(cacheKey);\r\n    if (cacheHit) {\r\n      parameters.options.headers['If-None-Match'] = cacheHit.etag;\r\n    }\r\n\r\n    return wrappedHttpClient(parameters.options, function (error, response, body) {\r\n      if (!error) {\r\n        if (response.statusCode === 200) {\r\n          var etag = getHeaderValue(response.headers, 'etag');\r\n          if (etag) {\r\n            cache.set(cacheKey, { data: cloneDeep(body), etag: etag });\r\n          }\r\n        }\r\n        if (response.statusCode === 304) {\r\n          body = cloneDeep(cacheHit.data);\r\n        }\r\n      }\r\n      parameters.callback(error, response, body);\r\n    });\r\n  }\r\n\r\n  httpClient.reset = cache.reset;\r\n  return httpClient;\r\n}\r\n\r\nfunction Request(cacheConfig, baseHttpClient) {\r\n  var cache = new Cache(cacheConfig);\r\n  var wrappedHttpClient = baseHttpClient || require('request');\r\n  return getHttpClient(cache, wrappedHttpClient);\r\n}\r\n\r\nmodule.exports = Request;\r\n"]},"metadata":{},"sourceType":"script"}