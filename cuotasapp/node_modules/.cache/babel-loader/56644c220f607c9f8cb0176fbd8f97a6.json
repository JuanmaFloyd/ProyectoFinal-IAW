{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_items(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $currentBaseId = it.baseId;\n  out += 'var ' + $errs + ' = errors;var ' + $valid + ';';\n\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n\n    if ($additionalItems === false) {\n      out += ' ' + $valid + ' = ' + $data + '.length <= ' + $schema.length + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + $valid + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = '';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { limit: ' + $schema.length + ' } ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + $schema.length + ' items\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      var __err = out;\n      out = $$outStack.pop();\n\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + __err + ']); ';\n        } else {\n          out += ' validate.errors = [' + __err + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n\n    var arr1 = $schema;\n\n    if (arr1) {\n      var $sch,\n          $i = -1,\n          l1 = arr1.length - 1;\n\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          out += ' ' + $nextValid + ' = true; if (' + $data + '.length > ' + $i + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n          } else {\n            out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n          }\n\n          out += ' }  ';\n\n          if ($breakOnError) {\n            out += ' if (' + $nextValid + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + $nextValid + ' = true; if (' + $data + '.length > ' + $schema.length + ') {  for (var ' + $idx + ' = ' + $schema.length + '; ' + $idx + ' < ' + $data + '.length; ' + $idx + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n      } else {\n        out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n      }\n\n      if ($breakOnError) {\n        out += ' if (!' + $nextValid + ') break; ';\n      }\n\n      out += ' } }  ';\n\n      if ($breakOnError) {\n        out += ' if (' + $nextValid + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + $idx + ' = ' + 0 + '; ' + $idx + ' < ' + $data + '.length; ' + $idx + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n    } else {\n      out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n    }\n\n    if ($breakOnError) {\n      out += ' if (!' + $nextValid + ') break; ';\n    }\n\n    out += ' }  ';\n\n    if ($breakOnError) {\n      out += ' if (' + $nextValid + ') { ';\n      $closingBraces += '}';\n    }\n  }\n\n  if ($breakOnError) {\n    out += ' ' + $closingBraces + ' if (' + $errs + ' == errors) {';\n  }\n\n  out = it.util.cleanUpCode(out);\n  return out;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/node_modules/ajv/lib/dotjs/items.js"],"names":["module","exports","generate_items","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","$errs","$it","util","copy","$closingBraces","$nextValid","$idx","$dataNxt","$nextData","$currentBaseId","baseId","Array","isArray","$additionalItems","additionalItems","length","$currErrSchemaPath","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async","arr1","$sch","$i","l1","schemaHasRules","RULES","all","$passData","getPathExpr","jsonPointers","dataPathArr","$code","validate","varOccurences","varReplace","cleanUpCode"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_items(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}