{"ast":null,"code":"var sdkVersion = require('../package').version;\n\nvar Promise = require('bluebird');\n\nvar clientId;\nvar clientSecret;\nvar accessToken;\nvar platformId;\nvar corporationId;\nvar integratorId;\nvar refreshToken;\nvar productId = 'bc32b6ntrpp001u8nhkg';\nvar nodeVersion = process.version;\nvar trackingId = 'platform:' + nodeVersion.substring(0, nodeVersion.indexOf('.')) + '|' + process.version + ',type:SDK' + sdkVersion + ',so;';\nvar schema = 'https';\nvar host = 'api.mercadopago.com';\nvar userAgent = 'MercadoPago Node.js SDK v' + sdkVersion + ' (node ' + process.version + '-' + process.arch + '-' + process.platform + ')';\nvar configurationsModule = module.exports = {\n  sandbox: false,\n  show_promise_error: true,\n  cache_max_size: 100 * (1024 * 1024) // 100 Megabytes\n\n};\n/**\n * Set up configurations globally.\n * Do not allow override the client_id and the client_secret\n * @param {object} configurations\n */\n\nconfigurationsModule.configure = function (configurations) {\n  if (configurations === undefined || typeof configurations !== 'object') {\n    throw new Error('You must provide an Object with the configurations');\n  }\n\n  if (configurations.client_id === undefined && configurations.client_secret === undefined && configurations.access_token === undefined) {\n    throw new Error('You must provide a method of authentication (client_id & client_secret or access_token)');\n  }\n\n  if (configurations.client_id !== undefined && configurations.client_secret === undefined || configurations.client_id === undefined && configurations.client_secret !== undefined) {\n    throw new Error('You must provide client_id and client_secret');\n  }\n\n  if (configurations.client_id !== undefined && configurations.client_secret !== undefined && (clientId !== undefined || clientSecret !== undefined)) {\n    throw new Error('Cant change client_id or client_secret because is already set');\n  }\n\n  clientId = clientId || configurations.client_id;\n  clientSecret = clientSecret || configurations.client_secret; // Set accessToken\n\n  accessToken = configurations.access_token || accessToken; // Set headers parameters\n\n  platformId = configurations.platform_id;\n  corporationId = configurations.corporation_id;\n  integratorId = configurations.integrator_id; // Use if to prevent false value\n\n  this.sandbox = configurations.sandbox !== undefined ? configurations.sandbox : this.sandbox;\n  this.show_promise_error = configurations.show_promise_error !== undefined ? configurations.show_promise_error : this.show_promise_error;\n\n  if (!this.show_promise_error) {\n    Promise.onPossiblyUnhandledRejection(function ()\n    /* error, promise */\n    {\n      /* Do Nothing */\n    });\n  }\n};\n/**\n * Get clientId\n * @returns {string}\n */\n\n\nconfigurationsModule.getClientId = function () {\n  return clientId;\n};\n/**\n * Get clientSecret\n * @returns {string}\n */\n\n\nconfigurationsModule.getClientSecret = function () {\n  return clientSecret;\n};\n/**\n * Get platformId\n * @returns {string}\n */\n\n\nconfigurationsModule.getPlatformId = function () {\n  return platformId;\n};\n/**\n * Get corporationId\n * @returns {string}\n */\n\n\nconfigurationsModule.getCorporationId = function () {\n  return corporationId;\n};\n/**\n * Get integratorId\n * @returns {string}\n */\n\n\nconfigurationsModule.getIntegratorId = function () {\n  return integratorId;\n};\n/**\n * Set accessToken\n * @param {string} token\n */\n\n\nconfigurationsModule.setAccessToken = function (token) {\n  accessToken = token;\n  return this;\n};\n/**\n * Get accessToken\n * @returns {string}\n */\n\n\nconfigurationsModule.getAccessToken = function () {\n  return accessToken;\n};\n/**\n * Set refreshToken\n * @param token\n */\n\n\nconfigurationsModule.setRefreshToken = function (token) {\n  refreshToken = token;\n  return this;\n};\n/**\n * Get refreshToken\n * @returns {*}\n */\n\n\nconfigurationsModule.getRefreshToken = function () {\n  return refreshToken;\n};\n/**\n * Get base URL to execute rest operations\n * @returns {string}\n */\n\n\nconfigurationsModule.getBaseUrl = function () {\n  return schema + '://' + host;\n};\n/**\n * Get productId\n * @returns {string}\n */\n\n\nconfigurationsModule.getProductId = function () {\n  return productId;\n};\n/**\n * Get trackingId\n * @returns {string}\n */\n\n\nconfigurationsModule.getTrackingId = function () {\n  return trackingId;\n};\n/**\n * Get userAgent\n * @returns {string}\n */\n\n\nconfigurationsModule.getUserAgent = function () {\n  return userAgent;\n};\n/**\n * Check NODE_ENV variable\n * @returns {boolean}\n */\n\n\nconfigurationsModule.areTestsRunnning = function () {\n  return process.env.NODE_ENV === 'test';\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/lib/configurations.js"],"names":["sdkVersion","require","version","Promise","clientId","clientSecret","accessToken","platformId","corporationId","integratorId","refreshToken","productId","nodeVersion","process","trackingId","substring","indexOf","schema","host","userAgent","arch","platform","configurationsModule","module","exports","sandbox","show_promise_error","cache_max_size","configure","configurations","undefined","Error","client_id","client_secret","access_token","platform_id","corporation_id","integrator_id","onPossiblyUnhandledRejection","getClientId","getClientSecret","getPlatformId","getCorporationId","getIntegratorId","setAccessToken","token","getAccessToken","setRefreshToken","getRefreshToken","getBaseUrl","getProductId","getTrackingId","getUserAgent","areTestsRunnning","env","NODE_ENV"],"mappings":"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","sourcesContent":["var sdkVersion = require('../package').version;\nvar Promise = require('bluebird');\nvar clientId;\nvar clientSecret;\nvar accessToken;\nvar platformId;\nvar corporationId;\nvar integratorId;\nvar refreshToken;\nvar productId = 'bc32b6ntrpp001u8nhkg';\nvar nodeVersion = process.version\nvar trackingId = 'platform:' + nodeVersion.substring(0, nodeVersion.indexOf('.')) + '|' + process.version + ',type:SDK'+ sdkVersion + ',so;';\nvar schema = 'https';\nvar host = 'api.mercadopago.com';\nvar userAgent = 'MercadoPago Node.js SDK v' + sdkVersion + ' (node ' + process.version + '-' + process.arch +\n  '-' + process.platform + ')';\n\nvar configurationsModule = module.exports = {\n  sandbox: false,\n  show_promise_error: true,\n  cache_max_size: 100 * (1024 * 1024) // 100 Megabytes\n};\n\n/**\n * Set up configurations globally.\n * Do not allow override the client_id and the client_secret\n * @param {object} configurations\n */\nconfigurationsModule.configure = function (configurations) {\n  if (configurations === undefined || typeof configurations !== 'object') {\n    throw new Error('You must provide an Object with the configurations');\n  }\n\n  if (configurations.client_id === undefined && configurations.client_secret === undefined &&\n    configurations.access_token === undefined) {\n    throw new Error('You must provide a method of authentication (client_id & client_secret or access_token)');\n  }\n\n  if ((configurations.client_id !== undefined && configurations.client_secret === undefined)\n    || (configurations.client_id === undefined && configurations.client_secret !== undefined)) {\n    throw new Error('You must provide client_id and client_secret');\n  }\n\n  if (configurations.client_id !== undefined && configurations.client_secret !== undefined\n    && (clientId !== undefined || clientSecret !== undefined)) {\n    throw new Error('Cant change client_id or client_secret because is already set');\n  }\n\n  clientId = clientId || configurations.client_id;\n  clientSecret = clientSecret || configurations.client_secret;\n\n  // Set accessToken\n  accessToken = configurations.access_token || accessToken;\n  // Set headers parameters\n  platformId = configurations.platform_id;\n  corporationId = configurations.corporation_id;\n  integratorId = configurations.integrator_id;\n  // Use if to prevent false value\n  this.sandbox = (configurations.sandbox !== undefined) ? configurations.sandbox : this.sandbox;\n  this.show_promise_error = (configurations.show_promise_error !== undefined) ?\n    configurations.show_promise_error : this.show_promise_error;\n\n  if (!this.show_promise_error) {\n    Promise.onPossiblyUnhandledRejection(function (/* error, promise */) { /* Do Nothing */ });\n  }\n};\n\n/**\n * Get clientId\n * @returns {string}\n */\nconfigurationsModule.getClientId = function () {\n  return clientId;\n};\n\n/**\n * Get clientSecret\n * @returns {string}\n */\nconfigurationsModule.getClientSecret = function () {\n  return clientSecret;\n};\n\n/**\n * Get platformId\n * @returns {string}\n */\nconfigurationsModule.getPlatformId = function () {\n  return platformId;\n};\n\n/**\n * Get corporationId\n * @returns {string}\n */\nconfigurationsModule.getCorporationId = function () {\n  return corporationId;\n};\n\n/**\n * Get integratorId\n * @returns {string}\n */\nconfigurationsModule.getIntegratorId = function () {\n  return integratorId;\n};\n\n/**\n * Set accessToken\n * @param {string} token\n */\nconfigurationsModule.setAccessToken = function (token) {\n  accessToken = token;\n  return this;\n};\n\n/**\n * Get accessToken\n * @returns {string}\n */\nconfigurationsModule.getAccessToken = function () {\n  return accessToken;\n};\n\n/**\n * Set refreshToken\n * @param token\n */\nconfigurationsModule.setRefreshToken = function (token) {\n  refreshToken = token;\n  return this;\n};\n\n/**\n * Get refreshToken\n * @returns {*}\n */\nconfigurationsModule.getRefreshToken = function () {\n  return refreshToken;\n};\n\n/**\n * Get base URL to execute rest operations\n * @returns {string}\n */\nconfigurationsModule.getBaseUrl = function () {\n  return schema + '://' + host;\n};\n\n/**\n * Get productId\n * @returns {string}\n */\nconfigurationsModule.getProductId = function () {\n  return productId;\n};\n\n/**\n * Get trackingId\n * @returns {string}\n */\nconfigurationsModule.getTrackingId = function () {\n  return trackingId;\n};\n\n/**\n * Get userAgent\n * @returns {string}\n */\nconfigurationsModule.getUserAgent = function () {\n  return userAgent;\n};\n\n/**\n * Check NODE_ENV variable\n * @returns {boolean}\n */\nconfigurationsModule.areTestsRunnning = function () {\n  return process.env.NODE_ENV === 'test';\n};\n"]},"metadata":{},"sourceType":"script"}