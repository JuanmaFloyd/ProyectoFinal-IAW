{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate__formatLimit(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  out += 'var ' + $valid + ' = undefined;';\n\n  if (it.opts.format === false) {\n    out += ' ' + $valid + ' = true; ';\n    return out;\n  }\n\n  var $schemaFormat = it.schema.format,\n      $isDataFormat = it.opts.v5 && $schemaFormat.$data,\n      $closingBraces = '';\n\n  if ($isDataFormat) {\n    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),\n        $format = 'format' + $lvl,\n        $compare = 'compare' + $lvl;\n    out += ' var ' + $format + ' = formats[' + $schemaValueFormat + '] , ' + $compare + ' = ' + $format + ' && ' + $format + '.compare;';\n  } else {\n    var $format = it.formats[$schemaFormat];\n\n    if (!($format && $format.compare)) {\n      out += '  ' + $valid + ' = true; ';\n      return out;\n    }\n\n    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';\n  }\n\n  var $isMax = $keyword == 'formatMaximum',\n      $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),\n      $schemaExcl = it.schema[$exclusiveKeyword],\n      $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,\n      $op = $isMax ? '<' : '>',\n      $result = 'result' + $lvl;\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n      $schemaValue;\n\n  if ($isData) {\n    out += ' var schema' + $lvl + ' = ' + it.util.getData($schema.$data, $dataLvl, it.dataPathArr) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n        $exclusive = 'exclusive' + $lvl,\n        $opExpr = 'op' + $lvl,\n        $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + $lvl + ' = ' + $schemaValueExcl + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' if (typeof ' + $schemaValueExcl + ' != \\'boolean\\' && ' + $schemaValueExcl + ' !== undefined) { ' + $valid + ' = false; ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    /* istanbul ignore else */\n\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_formatExclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + $exclusiveKeyword + ' should be boolean\\' ';\n      }\n\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n\n    var __err = out;\n    out = $$outStack.pop();\n\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n\n    out += ' }  ';\n\n    if ($breakOnError) {\n      $closingBraces += '}';\n      out += ' else { ';\n    }\n\n    if ($isData) {\n      out += ' if (' + $schemaValue + ' === undefined) ' + $valid + ' = true; else if (typeof ' + $schemaValue + ' != \\'string\\') ' + $valid + ' = false; else { ';\n      $closingBraces += '}';\n    }\n\n    if ($isDataFormat) {\n      out += ' if (!' + $compare + ') ' + $valid + ' = true; else { ';\n      $closingBraces += '}';\n    }\n\n    out += ' var ' + $result + ' = ' + $compare + '(' + $data + ',  ';\n\n    if ($isData) {\n      out += '' + $schemaValue;\n    } else {\n      out += '' + it.util.toQuotedString($schema);\n    }\n\n    out += ' ); if (' + $result + ' === undefined) ' + $valid + ' = false; var ' + $exclusive + ' = ' + $schemaValueExcl + ' === true; if (' + $valid + ' === undefined) { ' + $valid + ' = ' + $exclusive + ' ? ' + $result + ' ' + $op + ' 0 : ' + $result + ' ' + $op + '= 0; } if (!' + $valid + ') var op' + $lvl + ' = ' + $exclusive + ' ? \\'' + $op + '\\' : \\'' + $op + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n        $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n\n    if ($isData) {\n      out += ' if (' + $schemaValue + ' === undefined) ' + $valid + ' = true; else if (typeof ' + $schemaValue + ' != \\'string\\') ' + $valid + ' = false; else { ';\n      $closingBraces += '}';\n    }\n\n    if ($isDataFormat) {\n      out += ' if (!' + $compare + ') ' + $valid + ' = true; else { ';\n      $closingBraces += '}';\n    }\n\n    out += ' var ' + $result + ' = ' + $compare + '(' + $data + ',  ';\n\n    if ($isData) {\n      out += '' + $schemaValue;\n    } else {\n      out += '' + it.util.toQuotedString($schema);\n    }\n\n    out += ' ); if (' + $result + ' === undefined) ' + $valid + ' = false; if (' + $valid + ' === undefined) ' + $valid + ' = ' + $result + ' ' + $op;\n\n    if (!$exclusive) {\n      out += '=';\n    }\n\n    out += ' 0;';\n  }\n\n  out += '' + $closingBraces + 'if (!' + $valid + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = '';\n  /* istanbul ignore else */\n\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_formatLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { comparison: ' + $opExpr + ', limit:  ';\n\n    if ($isData) {\n      out += '' + $schemaValue;\n    } else {\n      out += '' + it.util.toQuotedString($schema);\n    }\n\n    out += ' , exclusive: ' + $exclusive + ' } ';\n\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + $opStr + ' \"';\n\n      if ($isData) {\n        out += '\\' + ' + $schemaValue + ' + \\'';\n      } else {\n        out += '' + it.util.escapeQuotes($schema);\n      }\n\n      out += '\"\\' ';\n    }\n\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n\n      if ($isData) {\n        out += 'validate.schema' + $schemaPath;\n      } else {\n        out += '' + it.util.toQuotedString($schema);\n      }\n\n      out += '         , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n    }\n\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n\n  var __err = out;\n  out = $$outStack.pop();\n\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + __err + ']); ';\n    } else {\n      out += ' validate.errors = [' + __err + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n\n  out += '}';\n  return out;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/node_modules/ajv/lib/dotjs/_formatLimit.js"],"names":["module","exports","generate__formatLimit","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","format","$schemaFormat","$isDataFormat","v5","$closingBraces","$schemaValueFormat","util","getData","dataPathArr","$format","$compare","formats","compare","getProperty","$isMax","$exclusiveKeyword","$schemaExcl","$isDataExcl","$op","$result","$isData","$schemaValue","$schemaValueExcl","$exclusive","$opExpr","$opStr","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async","escapeQuotes"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate__formatLimit(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  out += 'var ' + ($valid) + ' = undefined;';\n  if (it.opts.format === false) {\n    out += ' ' + ($valid) + ' = true; ';\n    return out;\n  }\n  var $schemaFormat = it.schema.format,\n    $isDataFormat = it.opts.v5 && $schemaFormat.$data,\n    $closingBraces = '';\n  if ($isDataFormat) {\n    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),\n      $format = 'format' + $lvl,\n      $compare = 'compare' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';\n  } else {\n    var $format = it.formats[$schemaFormat];\n    if (!($format && $format.compare)) {\n      out += '  ' + ($valid) + ' = true; ';\n      return out;\n    }\n    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';\n  }\n  var $isMax = $keyword == 'formatMaximum',\n    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $result = 'result' + $lvl;\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_formatExclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      $closingBraces += '}';\n      out += ' else { ';\n    }\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);\n    if (!$exclusive) {\n      out += '=';\n    }\n    out += ' 0;';\n  }\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_formatLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' , exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '}';\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}