{"ast":null,"code":"var Promise = require('bluebird');\n\nvar configurations = require('../configurations');\n\nvar preConditions = require('../precondition'); // Private variables to hide them from the integrator\n\n\nvar requestManager;\nvar execOptions;\n\nvar mercadopagoResponse = function mercadopagoResponse(body, status, idempotencyId, pagination, options, requestManagerInjection) {\n  this.body = body;\n  this.response = this.body;\n  this.status = status;\n  this.idempotency = idempotencyId;\n  this.pagination = pagination;\n  execOptions = options;\n  requestManager = requestManagerInjection;\n};\n/**\n * Execute request using the requestManager and execOptions\n * @param resolve\n * @param reject\n * @param callback\n * @returns {*}\n */\n\n\nvar executeRequest = function (resolve, reject, callback) {\n  callback = preConditions.getCallback(callback);\n  return requestManager.generateAccessToken().then(function () {\n    return requestManager.exec(execOptions);\n  }).then(function (response) {\n    resolve(response);\n    return callback.apply(null, [null, response]);\n  }).catch(function (err) {\n    reject(err);\n    return callback.apply(null, [err, null]);\n  });\n};\n/**\n * Execute previous page request using the requestManager\n * @param callback\n */\n\n\nmercadopagoResponse.prototype.prev = function (callback) {\n  var error;\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    var previousPage;\n\n    if (!this.pagination) {\n      error = new Error('This response doesnt support pagination');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    } // Set previous page\n\n\n    previousPage = this.pagination.offset - this.pagination.limit; // Setting the new limit and offset\n\n    execOptions.config.qs.limit = this.pagination.limit;\n    execOptions.config.qs.offset = previousPage >= 0 ? previousPage : 0;\n    return executeRequest(resolve, reject, callback);\n  }.bind(this));\n};\n/**\n * Execute next page request using the requestManager\n * @param callback\n */\n\n\nmercadopagoResponse.prototype.next = function (callback) {\n  var error;\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    if (!this.pagination) {\n      error = new Error('This response doesnt support pagination');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    } // Setting the new limit and offset\n\n\n    execOptions.config.qs.limit = this.pagination.limit;\n    execOptions.config.qs.offset = this.pagination.offset + this.pagination.limit;\n    return executeRequest(resolve, reject, callback);\n  }.bind(this));\n};\n/**\n * Check if it haves a previous page\n * @returns {boolean}\n */\n\n\nmercadopagoResponse.prototype.hasPrev = function () {\n  return this.pagination && this.pagination.offset > 0;\n};\n/**\n * Check if it haves a next page\n * @returns {boolean}\n */\n\n\nmercadopagoResponse.prototype.hasNext = function () {\n  return this.pagination && this.pagination.offset + this.pagination.limit < this.pagination.total;\n};\n/**\n * Get exec options\n * @returns {*}\n */\n\n\nmercadopagoResponse.prototype.getExecOptions = function () {\n  return execOptions;\n};\n\nmodule.exports = mercadopagoResponse;","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/lib/utils/mercadopagoResponse.js"],"names":["Promise","require","configurations","preConditions","requestManager","execOptions","mercadopagoResponse","body","status","idempotencyId","pagination","options","requestManagerInjection","response","idempotency","executeRequest","resolve","reject","callback","getCallback","generateAccessToken","then","exec","apply","catch","err","prototype","prev","error","previousPage","Error","offset","limit","config","qs","bind","next","hasPrev","hasNext","total","getExecOptions","module","exports"],"mappings":"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","sourcesContent":["var Promise = require('bluebird');\nvar configurations = require('../configurations');\nvar preConditions = require('../precondition');\n\n// Private variables to hide them from the integrator\nvar requestManager;\nvar execOptions;\n\nvar mercadopagoResponse = function mercadopagoResponse(body, status, idempotencyId, pagination, options, requestManagerInjection) {\n  this.body = body;\n  this.response = this.body;\n  this.status = status;\n  this.idempotency = idempotencyId;\n  this.pagination = pagination;\n\n  execOptions = options;\n  requestManager = requestManagerInjection;\n};\n\n/**\n * Execute request using the requestManager and execOptions\n * @param resolve\n * @param reject\n * @param callback\n * @returns {*}\n */\nvar executeRequest = function (resolve, reject, callback) {\n  callback = preConditions.getCallback(callback);\n\n  return requestManager.generateAccessToken().then(function () {\n    return requestManager.exec(execOptions);\n  }).then(function (response) {\n    resolve(response);\n    return callback.apply(null, [null, response]);\n  }).catch(function (err) {\n    reject(err);\n    return callback.apply(null, [err, null]);\n  });\n};\n\n/**\n * Execute previous page request using the requestManager\n * @param callback\n */\nmercadopagoResponse.prototype.prev = function (callback) {\n  var error;\n\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    var previousPage;\n\n    if (!this.pagination) {\n      error = new Error('This response doesnt support pagination');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    // Set previous page\n    previousPage = this.pagination.offset - this.pagination.limit;\n\n    // Setting the new limit and offset\n    execOptions.config.qs.limit = this.pagination.limit;\n    execOptions.config.qs.offset = (previousPage >= 0) ? previousPage : 0;\n\n    return executeRequest(resolve, reject, callback);\n  }.bind(this));\n};\n\n/**\n * Execute next page request using the requestManager\n * @param callback\n */\nmercadopagoResponse.prototype.next = function (callback) {\n  var error;\n\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    if (!this.pagination) {\n      error = new Error('This response doesnt support pagination');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    // Setting the new limit and offset\n    execOptions.config.qs.limit = this.pagination.limit;\n    execOptions.config.qs.offset = this.pagination.offset + this.pagination.limit;\n\n    return executeRequest(resolve, reject, callback);\n  }.bind(this));\n};\n\n/**\n * Check if it haves a previous page\n * @returns {boolean}\n */\nmercadopagoResponse.prototype.hasPrev = function () {\n  return (this.pagination && (this.pagination.offset > 0));\n};\n\n/**\n * Check if it haves a next page\n * @returns {boolean}\n */\nmercadopagoResponse.prototype.hasNext = function () {\n  return (this.pagination && ((this.pagination.offset + this.pagination.limit) < this.pagination.total));\n};\n\n/**\n * Get exec options\n * @returns {*}\n */\nmercadopagoResponse.prototype.getExecOptions = function () {\n  return execOptions;\n};\n\nmodule.exports = mercadopagoResponse;\n"]},"metadata":{},"sourceType":"script"}