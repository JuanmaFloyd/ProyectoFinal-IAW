{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_allOf(it, $keyword) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n      $allSchemasEmpty = true;\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $sch,\n        $i = -1,\n        l1 = arr1.length - 1;\n\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + it.validate($it) + ' ';\n        $it.baseId = $currentBaseId;\n\n        if ($breakOnError) {\n          out += ' if (' + $nextValid + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + $closingBraces.slice(0, -1) + ' ';\n    }\n  }\n\n  out = it.util.cleanUpCode(out);\n  return out;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/node_modules/ajv/lib/dotjs/allOf.js"],"names":["module","exports","generate_allOf","it","$keyword","out","$schema","schema","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$it","util","copy","$closingBraces","level","$nextValid","$currentBaseId","baseId","$allSchemasEmpty","arr1","$sch","$i","l1","length","schemaHasRules","RULES","all","validate","slice","cleanUpCode"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,QAA5B,EAAsC;AACrD,MAAIC,GAAG,GAAG,GAAV;AACA,MAAIC,OAAO,GAAGH,EAAE,CAACI,MAAH,CAAUH,QAAV,CAAd;AACA,MAAII,WAAW,GAAGL,EAAE,CAACM,UAAH,GAAgB,GAAhB,GAAsBL,QAAxC;AACA,MAAIM,cAAc,GAAGP,EAAE,CAACQ,aAAH,GAAmB,GAAnB,GAAyBP,QAA9C;AACA,MAAIQ,aAAa,GAAG,CAACT,EAAE,CAACU,IAAH,CAAQC,SAA7B;AACA,MAAIC,GAAG,GAAGZ,EAAE,CAACa,IAAH,CAAQC,IAAR,CAAad,EAAb,CAAV;AACA,MAAIe,cAAc,GAAG,EAArB;AACAH,EAAAA,GAAG,CAACI,KAAJ;AACA,MAAIC,UAAU,GAAG,UAAUL,GAAG,CAACI,KAA/B;AACA,MAAIE,cAAc,GAAGN,GAAG,CAACO,MAAzB;AAAA,MACEC,gBAAgB,GAAG,IADrB;AAEA,MAAIC,IAAI,GAAGlB,OAAX;;AACA,MAAIkB,IAAJ,EAAU;AACR,QAAIC,IAAJ;AAAA,QAAUC,EAAE,GAAG,CAAC,CAAhB;AAAA,QACEC,EAAE,GAAGH,IAAI,CAACI,MAAL,GAAc,CADrB;;AAEA,WAAOF,EAAE,GAAGC,EAAZ,EAAgB;AACdF,MAAAA,IAAI,GAAGD,IAAI,CAACE,EAAE,IAAI,CAAP,CAAX;;AACA,UAAIvB,EAAE,CAACa,IAAH,CAAQa,cAAR,CAAuBJ,IAAvB,EAA6BtB,EAAE,CAAC2B,KAAH,CAASC,GAAtC,CAAJ,EAAgD;AAC9CR,QAAAA,gBAAgB,GAAG,KAAnB;AACAR,QAAAA,GAAG,CAACR,MAAJ,GAAakB,IAAb;AACAV,QAAAA,GAAG,CAACN,UAAJ,GAAiBD,WAAW,GAAG,GAAd,GAAoBkB,EAApB,GAAyB,GAA1C;AACAX,QAAAA,GAAG,CAACJ,aAAJ,GAAoBD,cAAc,GAAG,GAAjB,GAAuBgB,EAA3C;AACArB,QAAAA,GAAG,IAAI,OAAQF,EAAE,CAAC6B,QAAH,CAAYjB,GAAZ,CAAR,GAA4B,GAAnC;AACAA,QAAAA,GAAG,CAACO,MAAJ,GAAaD,cAAb;;AACA,YAAIT,aAAJ,EAAmB;AACjBP,UAAAA,GAAG,IAAI,UAAWe,UAAX,GAAyB,MAAhC;AACAF,UAAAA,cAAc,IAAI,GAAlB;AACD;AACF;AACF;AACF;;AACD,MAAIN,aAAJ,EAAmB;AACjB,QAAIW,gBAAJ,EAAsB;AACpBlB,MAAAA,GAAG,IAAI,eAAP;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,IAAI,MAAOa,cAAc,CAACe,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAP,GAAsC,GAA7C;AACD;AACF;;AACD5B,EAAAA,GAAG,GAAGF,EAAE,CAACa,IAAH,CAAQkB,WAAR,CAAoB7B,GAApB,CAAN;AACA,SAAOA,GAAP;AACD,CAzCD","sourcesContent":["'use strict';\nmodule.exports = function generate_allOf(it, $keyword) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}