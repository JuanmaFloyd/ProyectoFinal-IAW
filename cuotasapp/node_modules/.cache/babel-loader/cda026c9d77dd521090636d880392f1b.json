{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_switch(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n      $currentBaseId = $it.baseId,\n      $shouldContinue;\n  out += 'var ' + $ifPassed + ';';\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $sch,\n        $caseIndex = -1,\n        l1 = arr1.length - 1;\n\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + $ifPassed + ') { ';\n        $closingBraces += '}';\n      }\n\n      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {\n        out += ' var ' + $errs + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + it.validate($it) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + $ifPassed + ' = ' + $nextValid + '; if (' + $ifPassed + ') {  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n\n        out += '  } else {  errors = ' + $errs + '; if (vErrors !== null) { if (' + $errs + ') vErrors.length = ' + $errs + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + $ifPassed + ' = true;  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n\n      $shouldContinue = $sch.continue;\n    }\n  }\n\n  out += '' + $closingBraces + 'var ' + $valid + ' = ' + $nextValid + '; ';\n  out = it.util.cleanUpCode(out);\n  return out;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/node_modules/ajv/lib/dotjs/switch.js"],"names":["module","exports","generate_switch","it","$keyword","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","$errs","$it","util","copy","$closingBraces","$nextValid","$ifPassed","$currentBaseId","baseId","$shouldContinue","arr1","$sch","$caseIndex","l1","length","if","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","validate","then","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async","continue","cleanUpCode"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_switch(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + '.' + $keyword;\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n    $currentBaseId = $it.baseId,\n    $shouldContinue;\n  out += 'var ' + ($ifPassed) + ';';\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $caseIndex = -1,\n      l1 = arr1.length - 1;\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + ($ifPassed) + ') { ';\n        $closingBraces += '}';\n      }\n      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {\n        out += ' var ' + ($errs) + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + ($ifPassed) + ' = true;  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n      $shouldContinue = $sch.continue\n    }\n  }\n  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + '; ';\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}