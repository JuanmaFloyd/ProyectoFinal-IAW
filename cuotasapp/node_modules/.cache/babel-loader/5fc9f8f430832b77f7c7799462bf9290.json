{"ast":null,"code":"var pack = require('../package');\n\nvar configurations = require('./configurations');\n\nvar requestManager = require('./request-manager');\n\nvar paymentModule = require('./resources/payment');\n\nvar collectionsModule = require('./resources/collections');\n\nvar preapprovalModule = require('./resources/preapproval');\n\nvar preferencesModule = require('./resources/preferences');\n\nvar preConditions = require('./precondition');\n\nvar ipnModule = require('./resources/ipn');\n\nmodule.exports = function () {\n  /**\n   * Show Warning for method deprecation\n   */\n  function showWarning() {\n    var method = showWarning.caller.name;\n\n    if (!configurations.areTestsRunnning()) {\n      console.warn('This method (' + method + ') is deprecated and its going to be remove on next versions');\n    }\n  }\n  /**\n   * Enabled or disabled sandbox\n   * @param enabled\n   */\n\n\n  function sandboxMode(enabled) {\n    showWarning();\n    configurations.sandbox = enabled !== undefined ? enabled === true : configurations.sandbox;\n  }\n  /**\n   * Get access_token using the client_id and client_secret configure\n   * @param callback\n   * @returns {string}\n   */\n\n\n  function getAccessToken() {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return requestManager.generateAccessToken(callback);\n  }\n  /**\n   * Execute a GET operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n\n\n  function getRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n    showWarning();\n    options = {\n      path: uri,\n      method: 'GET',\n      config: {\n        qs: arguments[1] !== undefined && typeof arguments[1] !== 'function' ? arguments[1] : {}\n      }\n    };\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n  /**\n   * Execute a POST operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n\n\n  function postRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n    showWarning();\n    options = {\n      path: uri,\n      method: 'POST',\n      payload: arguments[1] !== undefined && typeof arguments[1] !== 'function' ? arguments[1] : {},\n      config: {\n        qs: arguments[2] !== undefined && typeof arguments[2] !== 'function' ? arguments[2] : {}\n      }\n    };\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n  /**\n   * Execute a PUT operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n\n\n  function putRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n    showWarning();\n    options = {\n      path: uri,\n      method: 'PUT',\n      payload: arguments[1] !== undefined && typeof arguments[1] !== 'function' ? arguments[1] : {},\n      config: {\n        qs: arguments[2] !== undefined && typeof arguments[2] !== 'function' ? arguments[2] : {}\n      }\n    };\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n  /**\n   * Execute a DELETE operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   * @private\n   */\n\n\n  function deleteRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n    showWarning();\n    options = {\n      path: uri,\n      method: 'DELETE',\n      config: {\n        qs: arguments[1] !== undefined && typeof arguments[1] !== 'function' ? arguments[1] : {}\n      }\n    };\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n  /**\n   * Create a preference using preferenceModule\n   * @param preferences\n   * @param callback\n   * @returns {preferences}\n   */\n\n\n  function createPreference(preferences) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return preferencesModule.create(preferences, callback);\n  }\n  /**\n   * Update a preference using the preferenceModule (Make sure that the id is on the payload)\n   * @param id\n   * @param preference\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function updatePreference(id, preference) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning(); // Add the id to the preferece object\n\n    preference.id = id;\n    return preferencesModule.update(preference, callback);\n  }\n  /**\n   * Get a preference using preferenceModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function getPreference(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return preferencesModule.get(id, callback);\n  }\n  /**\n   * Create a preapproval payment using the preapprovalModule\n   * @param preapproval\n   * @param callback\n   * @returns {preapproval}\n   */\n\n\n  function createPreapprovalPayment(preapproval) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return preapprovalModule.create(preapproval, callback);\n  }\n  /**\n   * Update a preapproval payment using the preapprovalModule (Make sure that the id is on the payload)\n   * @param id\n   * @param preapproval\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function updatePreapprovalPayment(id, preapproval) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning(); // Add the id to the preapproval object\n\n    preapproval.id = id;\n    return preapprovalModule.update(preapproval, callback);\n  }\n  /**\n   * Get a preapproval payment using the preapprovalModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function getPreapprovalPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return preapprovalModule.get(id, callback);\n  }\n  /**\n   * Search for a payment using specific filters (offset and limit). Use the paymentModule\n   * @param filters\n   * @param offset\n   * @param limit\n   * @param callback\n   */\n\n\n  function searchPayment(filters, offset, limit) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    if (!isNaN(offset)) filters.offset = offset;\n    if (!isNaN(limit)) filters.limit = limit;\n    return paymentModule.oldSearch({\n      qs: filters\n    }, callback);\n  }\n  /**\n   * Get a payment using the IPN Module (Before manage method exists on IPN Module)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function getPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return ipnModule.getPayment(id, callback);\n  }\n  /**\n   * Get a authorized payment using the IPN Module (Before manage method exists on IPN Module)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function getAuthorizedPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return ipnModule.getAuthorizedPayment(id, callback);\n  }\n  /**\n   * Refund a payment (v0 implementation)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function refundPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return collectionsModule.put({\n      id: id,\n      status: 'refunded'\n    }, callback);\n  }\n  /**\n   * Cancel a payment (v0 implementation)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function cancelPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return collectionsModule.put({\n      id: id,\n      status: 'cancelled'\n    }, callback);\n  }\n  /**\n   * Canacel a preapproval payment using the preapprovalModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n\n\n  function cancelPreapprovalPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    showWarning();\n    return preapprovalModule.update({\n      id: id,\n      status: 'cancelled'\n    }, callback);\n  }\n\n  return {\n    sandboxMode: sandboxMode,\n    getAccessToken: getAccessToken,\n    get: getRest,\n    post: postRest,\n    put: putRest,\n    delete: deleteRest,\n    createPreference: createPreference,\n    updatePreference: updatePreference,\n    getPreference: getPreference,\n    createPreapprovalPayment: createPreapprovalPayment,\n    updatePreapprovalPayment: updatePreapprovalPayment,\n    getPreapprovalPayment: getPreapprovalPayment,\n    searchPayment: searchPayment,\n    getPayment: getPayment,\n    getPaymentInfo: getPayment,\n    getAuthorizedPayment: getAuthorizedPayment,\n    refundPayment: refundPayment,\n    cancelPayment: cancelPayment,\n    cancelPreapprovalPayment: cancelPreapprovalPayment,\n    version: pack.version\n  };\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/lib/mercadopago-support.js"],"names":["pack","require","configurations","requestManager","paymentModule","collectionsModule","preapprovalModule","preferencesModule","preConditions","ipnModule","module","exports","showWarning","method","caller","name","areTestsRunnning","console","warn","sandboxMode","enabled","sandbox","undefined","getAccessToken","callback","getCallback","arguments","length","generateAccessToken","getRest","uri","options","path","config","qs","err","apply","then","accessToken","access_token","exec","postRest","payload","putRest","deleteRest","createPreference","preferences","create","updatePreference","id","preference","update","getPreference","get","createPreapprovalPayment","preapproval","updatePreapprovalPayment","getPreapprovalPayment","searchPayment","filters","offset","limit","isNaN","oldSearch","getPayment","getAuthorizedPayment","refundPayment","put","status","cancelPayment","cancelPreapprovalPayment","post","delete","getPaymentInfo","version"],"mappings":"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","sourcesContent":["var pack = require('../package');\nvar configurations = require('./configurations');\nvar requestManager = require('./request-manager');\nvar paymentModule = require('./resources/payment');\nvar collectionsModule = require('./resources/collections');\nvar preapprovalModule = require('./resources/preapproval');\nvar preferencesModule = require('./resources/preferences');\nvar preConditions = require('./precondition');\nvar ipnModule = require('./resources/ipn');\n\nmodule.exports = function () {\n  /**\n   * Show Warning for method deprecation\n   */\n  function showWarning() {\n    var method = showWarning.caller.name;\n    if (!configurations.areTestsRunnning()) {\n      console.warn('This method (' + method + ') is deprecated and its going to be remove on next versions');\n    }\n  }\n\n  /**\n   * Enabled or disabled sandbox\n   * @param enabled\n   */\n  function sandboxMode(enabled) {\n    showWarning();\n    configurations.sandbox = (enabled !== undefined) ? (enabled === true) : configurations.sandbox;\n  }\n\n  /**\n   * Get access_token using the client_id and client_secret configure\n   * @param callback\n   * @returns {string}\n   */\n  function getAccessToken() {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return requestManager.generateAccessToken(callback);\n  }\n\n  /**\n   * Execute a GET operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n  function getRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n\n    showWarning();\n\n    options = {\n      path: uri,\n      method: 'GET',\n      config: {\n        qs: (arguments[1] !== undefined && typeof arguments[1] !== 'function') ? arguments[1] : {}\n      }\n    };\n\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n\n  /**\n   * Execute a POST operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n  function postRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n\n    showWarning();\n\n    options = {\n      path: uri,\n      method: 'POST',\n      payload: (arguments[1] !== undefined && typeof arguments[1] !== 'function') ? arguments[1] : {},\n      config: {\n        qs: (arguments[2] !== undefined && typeof arguments[2] !== 'function') ? arguments[2] : {}\n      }\n    };\n\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n\n  /**\n   * Execute a PUT operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   */\n  function putRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n\n    showWarning();\n\n    options = {\n      path: uri,\n      method: 'PUT',\n      payload: (arguments[1] !== undefined && typeof arguments[1] !== 'function') ? arguments[1] : {},\n      config: {\n        qs: (arguments[2] !== undefined && typeof arguments[2] !== 'function') ? arguments[2] : {}\n      }\n    };\n\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n\n  /**\n   * Execute a DELETE operation (Used like a rest client)\n   * @param uri\n   * @returns {Thenable<U>|*|{anyOf}}\n   * @private\n   */\n  function deleteRest(uri) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n    var options;\n\n    showWarning();\n\n    options = {\n      path: uri,\n      method: 'DELETE',\n      config: {\n        qs: (arguments[1] !== undefined && typeof arguments[1] !== 'function') ? arguments[1] : {}\n      }\n    };\n\n    return requestManager.generateAccessToken(function (err) {\n      // Return callback if an error ocurr getting the access_token\n      if (err) return callback.apply(null, [err, null]);\n      return false;\n    }).then(function (accessToken) {\n      options.access_token = accessToken;\n      return requestManager.exec(options, callback);\n    });\n  }\n\n  /**\n   * Create a preference using preferenceModule\n   * @param preferences\n   * @param callback\n   * @returns {preferences}\n   */\n  function createPreference(preferences) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return preferencesModule.create(preferences, callback);\n  }\n\n  /**\n   * Update a preference using the preferenceModule (Make sure that the id is on the payload)\n   * @param id\n   * @param preference\n   * @param callback\n   * @returns {*}\n   */\n  function updatePreference(id, preference) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    // Add the id to the preferece object\n    preference.id = id;\n\n    return preferencesModule.update(preference, callback);\n  }\n\n  /**\n   * Get a preference using preferenceModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function getPreference(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return preferencesModule.get(id, callback);\n  }\n\n  /**\n   * Create a preapproval payment using the preapprovalModule\n   * @param preapproval\n   * @param callback\n   * @returns {preapproval}\n   */\n  function createPreapprovalPayment(preapproval) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return preapprovalModule.create(preapproval, callback);\n  }\n\n  /**\n   * Update a preapproval payment using the preapprovalModule (Make sure that the id is on the payload)\n   * @param id\n   * @param preapproval\n   * @param callback\n   * @returns {*}\n   */\n  function updatePreapprovalPayment(id, preapproval) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    // Add the id to the preapproval object\n    preapproval.id = id;\n\n    return preapprovalModule.update(preapproval, callback);\n  }\n\n  /**\n   * Get a preapproval payment using the preapprovalModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function getPreapprovalPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return preapprovalModule.get(id, callback);\n  }\n\n  /**\n   * Search for a payment using specific filters (offset and limit). Use the paymentModule\n   * @param filters\n   * @param offset\n   * @param limit\n   * @param callback\n   */\n  function searchPayment(filters, offset, limit) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    if (!isNaN(offset)) filters.offset = offset;\n    if (!isNaN(limit)) filters.limit = limit;\n\n    return paymentModule.oldSearch({\n      qs: filters\n    }, callback);\n  }\n\n  /**\n   * Get a payment using the IPN Module (Before manage method exists on IPN Module)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function getPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return ipnModule.getPayment(id, callback);\n  }\n\n  /**\n   * Get a authorized payment using the IPN Module (Before manage method exists on IPN Module)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function getAuthorizedPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return ipnModule.getAuthorizedPayment(id, callback);\n  }\n\n  /**\n   * Refund a payment (v0 implementation)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function refundPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return collectionsModule.put({\n      id: id,\n      status: 'refunded'\n    }, callback);\n  }\n\n  /**\n   * Cancel a payment (v0 implementation)\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function cancelPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return collectionsModule.put({\n      id: id,\n      status: 'cancelled'\n    }, callback);\n  }\n\n  /**\n   * Canacel a preapproval payment using the preapprovalModule\n   * @param id\n   * @param callback\n   * @returns {*}\n   */\n  function cancelPreapprovalPayment(id) {\n    var callback = preConditions.getCallback(arguments[arguments.length - 1]);\n\n    showWarning();\n\n    return preapprovalModule.update({\n      id: id,\n      status: 'cancelled'\n    }, callback);\n  }\n\n  return {\n    sandboxMode: sandboxMode,\n    getAccessToken: getAccessToken,\n    get: getRest,\n    post: postRest,\n    put: putRest,\n    delete: deleteRest,\n    createPreference: createPreference,\n    updatePreference: updatePreference,\n    getPreference: getPreference,\n    createPreapprovalPayment: createPreapprovalPayment,\n    updatePreapprovalPayment: updatePreapprovalPayment,\n    getPreapprovalPayment: getPreapprovalPayment,\n    searchPayment: searchPayment,\n    getPayment: getPayment,\n    getPaymentInfo: getPayment,\n    getAuthorizedPayment: getAuthorizedPayment,\n    refundPayment: refundPayment,\n    cancelPayment: cancelPayment,\n    cancelPreapprovalPayment: cancelPreapprovalPayment,\n    version: pack.version\n  };\n};\n"]},"metadata":{},"sourceType":"script"}