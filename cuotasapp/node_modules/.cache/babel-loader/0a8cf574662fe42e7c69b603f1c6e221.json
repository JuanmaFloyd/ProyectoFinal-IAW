{"ast":null,"code":"var request = require('request');\n\nvar Promise = require('bluebird');\n\nvar uuid = require('uuid');\n\nvar configurations = require('./configurations');\n\nvar MercadopagoResponse = require('./utils/mercadopagoResponse');\n\nvar MercadoPagoError = require('./utils/mercadopagoError');\n\nvar validation = require('./validation');\n\nvar ETagRequest = require('request-etag');\n\nvar preConditions = require('./precondition');\n\nvar requestManager = module.exports = {\n  JSON_MIME_TYPE: 'application/json',\n  FORM_MIME_TYPE: 'application/x-www-form-urlencoded',\n  REST_CLIENT: new ETagRequest({\n    max: configurations.cache_max_size\n  }, request)\n};\n/**\n * Creates a dynamic function depending on the options that are send by the resources\n * @param options\n * @returns {Function}\n */\n\nrequestManager.describe = function (options) {\n  // This method will have the context of the class that is calling this (Will have the context of the class)\n  return function () {\n    var optMethod = requestManager.clone({}, options);\n    var calledArgs = arguments;\n    return new Promise(function (resolve, reject) {\n      var callback = calledArgs[calledArgs.length - 1]; // Last argument will always be the callback\n\n      var pathParameters = requestManager.getPathParamsKeyNames(optMethod.path);\n      var missingPayloadProperties = []; // Stores the missing payload path params (if there is any). POST, PUT, PATCH\n\n      var schema = this.schema; // Schema from resource\n\n      var needIdempotency = !!this.idempotency; // Idempotency from resource\n\n      var needPartnersHeaders = !!this.partnersHeaders;\n      var config = {};\n      var payload = {};\n      var error;\n      var totalFunctionParams;\n      var haveConfig = false; // If callback doesn't exists add it to the arguments (Prevent code to fail)\n\n      if (typeof callback !== 'function' || callback === undefined) {\n        // Arguments is not a pure array. You need to make a normal array out of it. If not arguments.length won't work\n        calledArgs = Array.prototype.slice.call(calledArgs);\n        calledArgs.push(callback = function () {});\n      } // If it is GET or DELETE the path variables needs to come from arguments\n\n\n      if (optMethod.method === 'GET' || optMethod.method === 'DELETE') {\n        haveConfig = typeof calledArgs[calledArgs.length - 2] === 'object';\n        totalFunctionParams = haveConfig ? pathParameters.length + 2 : pathParameters.length + 1; // Set the configurations\n\n        if (haveConfig) config = calledArgs[calledArgs.length - 2]; // Verify arguments quantity (invalid function call)\n\n        if (totalFunctionParams > calledArgs.length) {\n          error = new Error('Expecting parameters: ' + pathParameters.join(', ').replace(/:/g, ''));\n          reject(error);\n          return callback.apply(null, [error, null]);\n        } // Replace the path parameters for the variables from the args(same Index that the one declarated on the path)\n\n\n        pathParameters.forEach(function (param, index) {\n          optMethod.path = optMethod.path.replace(param, calledArgs[index]);\n        });\n      } else {\n        haveConfig = calledArgs.length > 2; // If configurations are sent, set configurations and payload depending on the correspondent argument index\n\n        if (haveConfig) {\n          if (typeof calledArgs[calledArgs.length - 2] === 'object') config = calledArgs[calledArgs.length - 2];\n          if (typeof calledArgs[calledArgs.length - 3] === 'object') payload = calledArgs[calledArgs.length - 3];\n        } else if (typeof calledArgs[calledArgs.length - 2] === 'object') {\n          payload = calledArgs[calledArgs.length - 2];\n        } // Replace the path parameters from the ones on the payload\n\n\n        pathParameters.forEach(function (param) {\n          var propertyFromPayload = param.replace(':', '');\n\n          if (payload && payload[propertyFromPayload]) {\n            optMethod.path = optMethod.path.replace(param, payload[propertyFromPayload]); // Remove it from the payload or MercadoPago API will return an error for invalid parameter\n\n            delete payload[propertyFromPayload];\n          } else {\n            missingPayloadProperties.push(propertyFromPayload);\n          }\n        }); // If there are any missing properties show an error (invalid function call)\n\n        if (missingPayloadProperties.length > 0) {\n          error = new Error('The JSON is missing the following properties: ' + missingPayloadProperties.join(', '));\n          reject(error);\n          return callback.apply(null, [error, null]);\n        }\n      } // If the path requires /sandbox prefix on sandbox mode, prepend it\n\n\n      if (optMethod.path_sandbox_prefix !== undefined && optMethod.path_sandbox_prefix && configurations.sandbox) {\n        optMethod.path = '/sandbox' + optMethod.path;\n      } // Generate the AccessToken first (required to work with MercadoPago API)\n\n\n      return requestManager.generateAccessToken().then(function (accessToken) {\n        return requestManager.exec({\n          schema: schema,\n          base_url: optMethod.base_url !== undefined ? optMethod.base_url : '',\n          // Overrides the base URI\n          path: optMethod.path,\n          method: optMethod.method,\n          config: config,\n          // Configurations object\n          payload: payload,\n          // Payload to send\n          idempotency: needIdempotency,\n          // Needs the idempotency header\n          // If the merchant provides an access_token, it should override the access_token configured on init\n          access_token: config.access_token ? config.access_token : accessToken,\n          platformId: needPartnersHeaders && configurations.getPlatformId(),\n          corporationId: needPartnersHeaders && configurations.getCorporationId(),\n          integratorId: needPartnersHeaders && configurations.getIntegratorId()\n        });\n      }).then(function (response) {\n        resolve(response);\n        return callback.apply(null, [null, response]);\n      }).catch(function (err) {\n        reject(err);\n        return callback.apply(null, [err, null]);\n      });\n    }.bind(this));\n  };\n};\n/**\n * Generate the access_token using the client_id and client_secret\n * @param callback\n */\n\n\nrequestManager.generateAccessToken = function (callback) {\n  var error;\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    // If the access_token is already set, return it from configurations\n    if (configurations.getAccessToken()) {\n      resolve(configurations.getAccessToken());\n      return callback.apply(null, [null, configurations.getAccessToken()]);\n    } // If the SDK is not yet configure\n\n\n    if (!configurations.getClientId() || !configurations.getClientSecret()) {\n      error = new MercadoPagoError('Must set client_id and client_secret', '', 500, '');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_id: configurations.getClientId(),\n        client_secret: configurations.getClientSecret(),\n        grant_type: 'client_credentials'\n      }\n    }).then(function (response) {\n      // Save token on configurations\n      // configurations.setAccessToken(response.body.access_token).setRefreshToken(response.body.refresh_token);\n      resolve(response.body.access_token);\n      return callback.apply(null, [null, response.body.access_token]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n/**\n * Set the new access_token using the previous one & the refresh_token\n * @param callback\n * @returns {*}\n */\n\n\nrequestManager.refreshAccessToken = function (callback) {\n  var error;\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    // Check if the refresh token is configure (require to refresh the access_token)\n    if (!configurations.getRefreshToken()) {\n      error = new MercadoPagoError('You need the refresh_token to refresh the access_token', '', 500, '');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_secret: configurations.getAccessToken(),\n        grant_type: 'refresh_token'\n      }\n    }).then(function (response) {\n      configurations.setAccessToken(response.body.access_token).setRefreshToken(response.body.refresh_token);\n      resolve(response.body.access_token);\n      return callback.apply(null, [null, response.body.access_token]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n/**\n * Get user access_token (mpconnect) using the access_token, code, redirect_uri\n * @param clientSecret - access_token from MercadoPago\n * @param authorizationCode - authrozication_code obtain from redirectURI\n * @param redirectURI - The one you use for obtaining the authrozication_code\n * @param callback\n */\n\n\nrequestManager.getUserCredentials = function (clientSecret, authorizationCode, redirectURI, callback) {\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_secret: clientSecret,\n        code: authorizationCode,\n        redirect_uri: redirectURI,\n        grant_type: 'authorization_code'\n      }\n    }).then(function (response) {\n      resolve(response);\n      return callback.apply(null, [null, response]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n/**\n * Build the request using the options send and the configurations\n * @param options\n * @returns {object}\n */\n\n\nrequestManager.buildRequest = function (options) {\n  var req = {};\n  var schemaErrors = [];\n  var headersNames = [];\n  var headerName;\n  var i;\n  req.uri = options.base_url ? options.base_url + options.path : configurations.getBaseUrl() + options.path;\n  req.method = options.method;\n  req.headers = {\n    'user-agent': configurations.getUserAgent(),\n    'x-product-id': configurations.getProductId(),\n    'x-tracking-id': configurations.getTrackingId(),\n    accept: requestManager.JSON_MIME_TYPE,\n    'content-type': requestManager.JSON_MIME_TYPE\n  };\n  req.qs = options.config && options.config.qs ? options.config.qs : {}; // Always set the querystring object\n\n  req.json = true; // Autoparse the response to JSON\n\n  if (options.integratorId) {\n    req.headers['x-integrator-id'] = options.integratorId;\n  }\n\n  if (options.corporationId) {\n    req.headers['x-corporation-id'] = options.corporationId;\n  }\n\n  if (options.platformId) {\n    req.headers['x-platform-id'] = options.platformId;\n  }\n\n  if (options.config && options.config.headers && typeof options.config.headers === 'object') {\n    headersNames = Object.keys(options.config.headers);\n\n    for (i = 0; i < headersNames.length; i += 1) {\n      headerName = headersNames[i];\n\n      if (headerName !== 'user-agent' && headerName !== 'x-idempotency-key' && Object.prototype.hasOwnProperty.call(options.config.headers, headerName)) {\n        req.headers[headerName] = options.config.headers[headerName];\n      }\n    }\n  }\n\n  if (req.method === 'POST' || req.method === 'PUT' || req.method === 'PATCH') {\n    // Set idempotency header if the resource needs idempotency of the config specified one\n    if (options.idempotency || options.config && options.config.idempotency) {\n      req.headers['x-idempotency-key'] = options.config.idempotency || uuid.v4();\n    }\n\n    if (req.headers['content-type'] === requestManager.JSON_MIME_TYPE) {\n      // If there is a schema available, validate the payload before continue\n      if (options.schema) {\n        schemaErrors = validation.validate(options.schema, options.payload);\n\n        if (schemaErrors.length > 0) {\n          throw new Error(validation.generateErrorMessage(schemaErrors));\n        }\n      }\n\n      req.json = options.payload;\n    } else {\n      req.form = options.payload;\n    }\n  } // Always add the access_token to the querystring\n\n\n  req.qs.access_token = options.config && options.config.access_token ? options.config.access_token : options.access_token; // Requires SSL certificates be valid\n\n  req.strictSSL = true;\n  return req;\n};\n/**\n * Executes the request build with the options sent\n * @param options\n * @param callback\n */\n\n\nrequestManager.exec = function (options, callback) {\n  callback = preConditions.getCallback(callback);\n  return new Promise(function (resolve, reject) {\n    var req;\n    var mpResponse;\n    var mpError;\n\n    try {\n      req = requestManager.buildRequest(options);\n    } catch (e) {\n      reject(e);\n      return callback.apply(null, [e, null]);\n    }\n\n    return requestManager.REST_CLIENT(req, function (error, response, body) {\n      if (error) {\n        // Create a mercadopagoError allowing to retry the operation\n        mpError = new MercadoPagoError(error.message, null, null, req.headers['x-idempotency-key'], options, this);\n        reject(mpError);\n        return callback.apply(null, [mpError, null]);\n      }\n\n      if (response.statusCode < 200 || response.statusCode >= 300 && response.statusCode !== 304) {\n        // Create a mercadopagoError allowing to retry the operation\n        mpError = new MercadoPagoError(body.message, body.cause, response.statusCode, req.headers['x-idempotency-key'], options, this);\n        reject(mpError);\n        return callback.apply(null, [mpError, null]);\n      } // Create a mercadopagoResponse to be returned\n\n\n      mpResponse = new MercadopagoResponse(body, response.statusCode, req.headers['x-idempotency-key'], body.paging, options, this);\n      resolve(mpResponse);\n      return callback.apply(null, [null, mpResponse]);\n    });\n  }.bind(this));\n};\n/**\n * Get path params key names from a String containing the path. Exp: '/v1/payments/:id' (Generate an array with :id)\n * @param path\n * @returns {Array}\n */\n\n\nrequestManager.getPathParamsKeyNames = function (path) {\n  return path.match(/(:[a-z|A-Z|_|-]*)/g) || [];\n};\n/**\n * Object.assign polyfill\n * @param target\n * @returns {any}\n */\n\n\nrequestManager.clone = function (target) {\n  if (target == null) {\n    // TypeError if undefined or null\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var to = Object(target);\n\n  for (var index = 1; index < arguments.length; index++) {\n    var nextSource = arguments[index];\n\n    if (nextSource != null) {\n      // pasamos si es undefined o null\n      for (var nextKey in nextSource) {\n        // Evita un error cuando 'hasOwnProperty' ha sido sobrescrito\n        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n          to[nextKey] = nextSource[nextKey];\n        }\n      }\n    }\n  }\n\n  return to;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/lib/request-manager.js"],"names":["request","require","Promise","uuid","configurations","MercadopagoResponse","MercadoPagoError","validation","ETagRequest","preConditions","requestManager","module","exports","JSON_MIME_TYPE","FORM_MIME_TYPE","REST_CLIENT","max","cache_max_size","describe","options","optMethod","clone","calledArgs","arguments","resolve","reject","callback","length","pathParameters","getPathParamsKeyNames","path","missingPayloadProperties","schema","needIdempotency","idempotency","needPartnersHeaders","partnersHeaders","config","payload","error","totalFunctionParams","haveConfig","undefined","Array","prototype","slice","call","push","method","Error","join","replace","apply","forEach","param","index","propertyFromPayload","path_sandbox_prefix","sandbox","generateAccessToken","then","accessToken","exec","base_url","access_token","platformId","getPlatformId","corporationId","getCorporationId","integratorId","getIntegratorId","response","catch","err","bind","getCallback","getAccessToken","getClientId","getClientSecret","client_id","client_secret","grant_type","body","refreshAccessToken","getRefreshToken","setAccessToken","setRefreshToken","refresh_token","getUserCredentials","clientSecret","authorizationCode","redirectURI","code","redirect_uri","buildRequest","req","schemaErrors","headersNames","headerName","i","uri","getBaseUrl","headers","getUserAgent","getProductId","getTrackingId","accept","qs","json","Object","keys","hasOwnProperty","v4","validate","generateErrorMessage","form","strictSSL","mpResponse","mpError","e","message","statusCode","cause","paging","match","target","TypeError","to","nextSource","nextKey"],"mappings":"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","sourcesContent":["var request = require('request');\nvar Promise = require('bluebird');\nvar uuid = require('uuid');\nvar configurations = require('./configurations');\nvar MercadopagoResponse = require('./utils/mercadopagoResponse');\nvar MercadoPagoError = require('./utils/mercadopagoError');\nvar validation = require('./validation');\nvar ETagRequest = require('request-etag');\nvar preConditions = require('./precondition');\n\nvar requestManager = module.exports = {\n  JSON_MIME_TYPE: 'application/json',\n  FORM_MIME_TYPE: 'application/x-www-form-urlencoded',\n  REST_CLIENT: new ETagRequest({\n    max: configurations.cache_max_size\n  }, request)\n};\n\n/**\n * Creates a dynamic function depending on the options that are send by the resources\n * @param options\n * @returns {Function}\n */\nrequestManager.describe = function (options) {\n  // This method will have the context of the class that is calling this (Will have the context of the class)\n  return function () {\n    var optMethod = requestManager.clone({}, options);\n    var calledArgs = arguments;\n\n    return new Promise(function (resolve, reject) {\n      var callback = calledArgs[calledArgs.length - 1]; // Last argument will always be the callback\n      var pathParameters = requestManager.getPathParamsKeyNames(optMethod.path);\n      var missingPayloadProperties = []; // Stores the missing payload path params (if there is any). POST, PUT, PATCH\n      var schema = this.schema; // Schema from resource\n      var needIdempotency = !!this.idempotency; // Idempotency from resource\n      var needPartnersHeaders = !!this.partnersHeaders;\n      var config = {};\n      var payload = {};\n      var error;\n      var totalFunctionParams;\n      var haveConfig = false;\n\n      // If callback doesn't exists add it to the arguments (Prevent code to fail)\n      if (typeof callback !== 'function' || callback === undefined) {\n        // Arguments is not a pure array. You need to make a normal array out of it. If not arguments.length won't work\n        calledArgs = Array.prototype.slice.call(calledArgs);\n        calledArgs.push(callback = function () {});\n      }\n\n      // If it is GET or DELETE the path variables needs to come from arguments\n      if (optMethod.method === 'GET' || optMethod.method === 'DELETE') {\n        haveConfig = (typeof calledArgs[calledArgs.length - 2] === 'object');\n        totalFunctionParams = (haveConfig) ? (pathParameters.length + 2) : (pathParameters.length + 1);\n\n        // Set the configurations\n        if (haveConfig) config = calledArgs[calledArgs.length - 2];\n\n        // Verify arguments quantity (invalid function call)\n        if (totalFunctionParams > calledArgs.length) {\n          error = new Error('Expecting parameters: ' + pathParameters.join(', ').replace(/:/g, ''));\n          reject(error);\n          return callback.apply(null, [error, null]);\n        }\n\n        // Replace the path parameters for the variables from the args(same Index that the one declarated on the path)\n        pathParameters.forEach(function (param, index) {\n          optMethod.path = optMethod.path.replace(param, calledArgs[index]);\n        });\n      } else {\n        haveConfig = (calledArgs.length > 2);\n\n        // If configurations are sent, set configurations and payload depending on the correspondent argument index\n        if (haveConfig) {\n          if (typeof calledArgs[calledArgs.length - 2] === 'object') config = calledArgs[calledArgs.length - 2];\n          if (typeof calledArgs[calledArgs.length - 3] === 'object') payload = calledArgs[calledArgs.length - 3];\n        } else if (typeof calledArgs[calledArgs.length - 2] === 'object') {\n          payload = calledArgs[calledArgs.length - 2];\n        }\n\n        // Replace the path parameters from the ones on the payload\n        pathParameters.forEach(function (param) {\n          var propertyFromPayload = param.replace(':', '');\n\n          if (payload && payload[propertyFromPayload]) {\n            optMethod.path = optMethod.path.replace(param, payload[propertyFromPayload]);\n            // Remove it from the payload or MercadoPago API will return an error for invalid parameter\n            delete payload[propertyFromPayload];\n          } else {\n            missingPayloadProperties.push(propertyFromPayload);\n          }\n        });\n\n        // If there are any missing properties show an error (invalid function call)\n        if (missingPayloadProperties.length > 0) {\n          error = new Error('The JSON is missing the following properties: ' + missingPayloadProperties.join(', '));\n          reject(error);\n          return callback.apply(null, [error, null]);\n        }\n      }\n\n      // If the path requires /sandbox prefix on sandbox mode, prepend it\n      if (optMethod.path_sandbox_prefix !== undefined && optMethod.path_sandbox_prefix && configurations.sandbox) {\n        optMethod.path = '/sandbox' + optMethod.path;\n      }\n\n      // Generate the AccessToken first (required to work with MercadoPago API)\n      return requestManager.generateAccessToken().then(function (accessToken) {\n        return requestManager.exec({\n          schema: schema,\n          base_url: (optMethod.base_url !== undefined) ? optMethod.base_url : '', // Overrides the base URI\n          path: optMethod.path,\n          method: optMethod.method,\n          config: config, // Configurations object\n          payload: payload, // Payload to send\n          idempotency: needIdempotency, // Needs the idempotency header\n          // If the merchant provides an access_token, it should override the access_token configured on init\n          access_token: config.access_token ? config.access_token : accessToken,\n          platformId: needPartnersHeaders && configurations.getPlatformId(),\n          corporationId: needPartnersHeaders && configurations.getCorporationId(),\n          integratorId: needPartnersHeaders && configurations.getIntegratorId(),\n        });\n      }).then(function (response) {\n        resolve(response);\n        return callback.apply(null, [null, response]);\n      }).catch(function (err) {\n        reject(err);\n        return callback.apply(null, [err, null]);\n      });\n    }.bind(this));\n  };\n};\n\n/**\n * Generate the access_token using the client_id and client_secret\n * @param callback\n */\nrequestManager.generateAccessToken = function (callback) {\n  var error;\n\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    // If the access_token is already set, return it from configurations\n    if (configurations.getAccessToken()) {\n      resolve(configurations.getAccessToken());\n      return callback.apply(null, [null, configurations.getAccessToken()]);\n    }\n\n    // If the SDK is not yet configure\n    if (!configurations.getClientId() || !configurations.getClientSecret()) {\n      error = new MercadoPagoError('Must set client_id and client_secret', '', 500, '');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_id: configurations.getClientId(),\n        client_secret: configurations.getClientSecret(),\n        grant_type: 'client_credentials'\n      }\n    }).then(function (response) {\n      // Save token on configurations\n      // configurations.setAccessToken(response.body.access_token).setRefreshToken(response.body.refresh_token);\n\n      resolve(response.body.access_token);\n      return callback.apply(null, [null, response.body.access_token]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n\n/**\n * Set the new access_token using the previous one & the refresh_token\n * @param callback\n * @returns {*}\n */\nrequestManager.refreshAccessToken = function (callback) {\n  var error;\n\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    // Check if the refresh token is configure (require to refresh the access_token)\n    if (!configurations.getRefreshToken()) {\n      error = new MercadoPagoError('You need the refresh_token to refresh the access_token', '', 500, '');\n      reject(error);\n      return callback.apply(null, [error, null]);\n    }\n\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_secret: configurations.getAccessToken(),\n        grant_type: 'refresh_token'\n      }\n    }).then(function (response) {\n      configurations.setAccessToken(response.body.access_token)\n        .setRefreshToken(response.body.refresh_token);\n\n      resolve(response.body.access_token);\n      return callback.apply(null, [null, response.body.access_token]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n\n/**\n * Get user access_token (mpconnect) using the access_token, code, redirect_uri\n * @param clientSecret - access_token from MercadoPago\n * @param authorizationCode - authrozication_code obtain from redirectURI\n * @param redirectURI - The one you use for obtaining the authrozication_code\n * @param callback\n */\nrequestManager.getUserCredentials = function (clientSecret, authorizationCode, redirectURI, callback) {\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    return requestManager.exec({\n      path: '/oauth/token',\n      method: 'POST',\n      payload: {\n        client_secret: clientSecret,\n        code: authorizationCode,\n        redirect_uri: redirectURI,\n        grant_type: 'authorization_code'\n      }\n    }).then(function (response) {\n      resolve(response);\n      return callback.apply(null, [null, response]);\n    }).catch(function (err) {\n      reject(err);\n      return callback.apply(null, [err, null]);\n    });\n  });\n};\n\n/**\n * Build the request using the options send and the configurations\n * @param options\n * @returns {object}\n */\nrequestManager.buildRequest = function (options) {\n  var req = {};\n  var schemaErrors = [];\n  var headersNames = [];\n  var headerName;\n  var i;\n\n  req.uri = (options.base_url) ? options.base_url + options.path : configurations.getBaseUrl() + options.path;\n  req.method = options.method;\n  req.headers = {\n    'user-agent': configurations.getUserAgent(),\n    'x-product-id': configurations.getProductId(),\n    'x-tracking-id': configurations.getTrackingId(),\n    accept: requestManager.JSON_MIME_TYPE,\n    'content-type': requestManager.JSON_MIME_TYPE\n  };\n  req.qs = (options.config && options.config.qs) ? options.config.qs : {}; // Always set the querystring object\n  req.json = true; // Autoparse the response to JSON\n\n  if(options.integratorId) {\n    req.headers['x-integrator-id'] = options.integratorId;\n  }\n\n  if(options.corporationId) {\n    req.headers['x-corporation-id'] = options.corporationId;\n  }\n\n  if(options.platformId) {\n    req.headers['x-platform-id'] = options.platformId;\n  }\n\n  if (options.config && options.config.headers && typeof options.config.headers === 'object') {\n    headersNames = Object.keys(options.config.headers);\n    for (i = 0; i < headersNames.length; i += 1) {\n      headerName = headersNames[i];\n      if (headerName !== 'user-agent' && headerName !== 'x-idempotency-key'\n        && Object.prototype.hasOwnProperty.call(options.config.headers, headerName)) {\n        req.headers[headerName] = options.config.headers[headerName];\n      }\n    }\n  }\n\n  if (req.method === 'POST' || req.method === 'PUT' || req.method === 'PATCH') {\n    // Set idempotency header if the resource needs idempotency of the config specified one\n    if (options.idempotency || (options.config && options.config.idempotency)) {\n      req.headers['x-idempotency-key'] = options.config.idempotency || uuid.v4();\n    }\n    if (req.headers['content-type'] === requestManager.JSON_MIME_TYPE) {\n      // If there is a schema available, validate the payload before continue\n      if (options.schema) {\n        schemaErrors = validation.validate(options.schema, options.payload);\n\n        if (schemaErrors.length > 0) {\n          throw new Error(validation.generateErrorMessage(schemaErrors));\n        }\n      }\n\n      req.json = options.payload;\n    } else {\n      req.form = options.payload;\n    }\n  }\n\n  // Always add the access_token to the querystring\n  req.qs.access_token = (options.config && options.config.access_token) ? options.config.access_token : options.access_token;\n  // Requires SSL certificates be valid\n  req.strictSSL = true;\n\n  return req;\n};\n\n/**\n * Executes the request build with the options sent\n * @param options\n * @param callback\n */\nrequestManager.exec = function (options, callback) {\n  callback = preConditions.getCallback(callback);\n\n  return new Promise(function (resolve, reject) {\n    var req;\n    var mpResponse;\n    var mpError;\n\n    try {\n      req = requestManager.buildRequest(options);\n    } catch (e) {\n      reject(e);\n      return callback.apply(null, [e, null]);\n    }\n\n    return requestManager.REST_CLIENT(req, function (error, response, body) {\n      if (error) {\n        // Create a mercadopagoError allowing to retry the operation\n        mpError = new MercadoPagoError(error.message, null, null, req.headers['x-idempotency-key'], options, this);\n        reject(mpError);\n        return callback.apply(null, [mpError, null]);\n      }\n\n      if (response.statusCode < 200 || (response.statusCode >= 300 && response.statusCode !== 304)) {\n        // Create a mercadopagoError allowing to retry the operation\n        mpError = new MercadoPagoError(body.message, body.cause, response.statusCode, req.headers['x-idempotency-key'],\n          options, this);\n        reject(mpError);\n        return callback.apply(null, [mpError, null]);\n      }\n\n      // Create a mercadopagoResponse to be returned\n      mpResponse = new MercadopagoResponse(body, response.statusCode, req.headers['x-idempotency-key'],\n        body.paging, options, this);\n\n      resolve(mpResponse);\n      return callback.apply(null, [null, mpResponse]);\n    });\n  }.bind(this));\n};\n\n/**\n * Get path params key names from a String containing the path. Exp: '/v1/payments/:id' (Generate an array with :id)\n * @param path\n * @returns {Array}\n */\nrequestManager.getPathParamsKeyNames = function (path) {\n  return path.match(/(:[a-z|A-Z|_|-]*)/g) || [];\n};\n\n/**\n * Object.assign polyfill\n * @param target\n * @returns {any}\n */\nrequestManager.clone = function (target) {\n  if (target == null) { // TypeError if undefined or null\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var to = Object(target);\n\n  for (var index = 1; index < arguments.length; index++) {\n    var nextSource = arguments[index];\n\n    if (nextSource != null) { // pasamos si es undefined o null\n      for (var nextKey in nextSource) {\n        // Evita un error cuando 'hasOwnProperty' ha sido sobrescrito\n        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n          to[nextKey] = nextSource[nextKey];\n        }\n      }\n    }\n  }\n  return to;\n};\n"]},"metadata":{},"sourceType":"script"}