{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_validate(it, $keyword) {\n  var out = '';\n  var $async = it.schema.$async === true;\n\n  if (it.isTop) {\n    var $top = it.isTop,\n        $lvl = it.level = 0,\n        $dataLvl = it.dataLevel = 0,\n        $data = 'data';\n    it.rootId = it.resolve.fullPath(it.root.schema.id);\n    it.baseId = it.baseId || it.rootId;\n\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var validate = ';\n\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async == 'co*') {\n          out += 'co.wrap';\n        }\n\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data;';\n  } else {\n    var $lvl = it.level,\n        $dataLvl = it.dataLevel,\n        $data = 'data' + ($dataLvl || '');\n    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + $lvl + ' = errors;';\n  }\n\n  var $valid = 'valid' + $lvl,\n      $breakOnError = !it.opts.allErrors,\n      $closingBraces1 = '',\n      $closingBraces2 = '',\n      $errorKeyword;\n  var $typeSchema = it.schema.type,\n      $typeIsArray = Array.isArray($typeSchema);\n\n  if ($typeSchema && it.opts.coerceTypes) {\n    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n\n    if ($coerceToTypes) {\n      var $schemaPath = it.schemaPath + '.type',\n          $errSchemaPath = it.errSchemaPath + '/type',\n          $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + it.util[$method]($typeSchema, $data, true) + ') {  ';\n      var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n      out += ' var ' + $dataType + ' = typeof ' + $data + '; ';\n\n      if (it.opts.coerceTypes == 'array') {\n        out += ' if (' + $dataType + ' == \\'object\\' && Array.isArray(' + $data + ')) ' + $dataType + ' = \\'array\\'; ';\n      }\n\n      out += ' var ' + $coerced + ' = undefined; ';\n      var $bracesCoercion = '';\n      var arr1 = $coerceToTypes;\n\n      if (arr1) {\n        var $type,\n            $i = -1,\n            l1 = arr1.length - 1;\n\n        while ($i < l1) {\n          $type = arr1[$i += 1];\n\n          if ($i) {\n            out += ' if (' + $coerced + ' === undefined) { ';\n            $bracesCoercion += '}';\n          }\n\n          if (it.opts.coerceTypes == 'array' && $type != 'array') {\n            out += ' if (' + $dataType + ' == \\'array\\' && ' + $data + '.length == 1) { ' + $coerced + ' = ' + $data + ' = ' + $data + '[0]; ' + $dataType + ' = typeof ' + $data + ';  } ';\n          }\n\n          if ($type == 'string') {\n            out += ' if (' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\') ' + $coerced + ' = \\'\\' + ' + $data + '; else if (' + $data + ' === null) ' + $coerced + ' = \\'\\'; ';\n          } else if ($type == 'number' || $type == 'integer') {\n            out += ' if (' + $dataType + ' == \\'boolean\\' || ' + $data + ' === null || (' + $dataType + ' == \\'string\\' && ' + $data + ' && ' + $data + ' == +' + $data + ' ';\n\n            if ($type == 'integer') {\n              out += ' && !(' + $data + ' % 1)';\n            }\n\n            out += ')) ' + $coerced + ' = +' + $data + '; ';\n          } else if ($type == 'boolean') {\n            out += ' if (' + $data + ' === \\'false\\' || ' + $data + ' === 0 || ' + $data + ' === null) ' + $coerced + ' = false; else if (' + $data + ' === \\'true\\' || ' + $data + ' === 1) ' + $coerced + ' = true; ';\n          } else if ($type == 'null') {\n            out += ' if (' + $data + ' === \\'\\' || ' + $data + ' === 0 || ' + $data + ' === false) ' + $coerced + ' = null; ';\n          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n            out += ' if (' + $dataType + ' == \\'string\\' || ' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\' || ' + $data + ' == null) ' + $coerced + ' = [' + $data + ']; ';\n          }\n        }\n      }\n\n      out += ' ' + $bracesCoercion + ' if (' + $coerced + ' === undefined) {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = '';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n        if ($typeIsArray) {\n          out += '' + $typeSchema.join(\",\");\n        } else {\n          out += '' + $typeSchema;\n        }\n\n        out += '\\' } ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should be ';\n\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n\n          out += '\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      var __err = out;\n      out = $$outStack.pop();\n\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + __err + ']); ';\n        } else {\n          out += ' validate.errors = [' + __err + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n\n      out += ' } else { ';\n\n      if ($dataLvl) {\n        var $parentData = 'data' + ($dataLvl - 1 || ''),\n            $dataProperty = it.dataPathArr[$dataLvl];\n        out += ' ' + $data + ' = ' + $parentData + '[' + $dataProperty + '] = ' + $coerced + '; ';\n      } else {\n        out += ' data = ' + $coerced + '; if (parentData !== undefined) parentData[parentDataProperty] = ' + $coerced + '; ';\n      }\n\n      out += ' } } ';\n    }\n  }\n\n  var $refKeywords;\n\n  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs == 'ignore') {\n      $refKeywords = false;\n      console.log('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs !== true) {\n      console.log('$ref: all keywords used in schema at path \"' + it.errSchemaPath + '\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');\n    }\n  }\n\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + it.RULES.all.$ref.code(it, '$ref') + ' ';\n\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + $lvl;\n      }\n\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n\n    if (arr2) {\n      var $rulesGroup,\n          i2 = -1,\n          l2 = arr2.length - 1;\n\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + it.util.checkDataType($rulesGroup.type, $data) + ') { ';\n          }\n\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                  $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n\n              if (arr3) {\n                var $propertyKey,\n                    i3 = -1,\n                    l3 = arr3.length - 1;\n\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + $passData + ' === undefined) ' + $passData + ' = ';\n\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n\n              if (arr4) {\n                var $sch,\n                    $i = -1,\n                    l4 = arr4.length - 1;\n\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + $passData + ' === undefined) ' + $passData + ' = ';\n\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n\n          var arr5 = $rulesGroup.rules;\n\n          if (arr5) {\n            var $rule,\n                i5 = -1,\n                l5 = arr5.length - 1;\n\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n\n              if ($shouldUseRule($rule)) {\n                out += ' ' + $rule.code(it, $rule.keyword) + ' ';\n\n                if ($breakOnError) {\n                  $closingBraces1 += '}';\n                }\n              }\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' ' + $closingBraces1 + ' ';\n            $closingBraces1 = '';\n          }\n\n          if ($rulesGroup.type) {\n            out += ' } ';\n\n            if ($typeSchema && $typeSchema === $rulesGroup.type) {\n              var $typeChecked = true;\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                  $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = '';\n              /* istanbul ignore else */\n\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n                if ($typeIsArray) {\n                  out += '' + $typeSchema.join(\",\");\n                } else {\n                  out += '' + $typeSchema;\n                }\n\n                out += '\\' } ';\n\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n\n                  if ($typeIsArray) {\n                    out += '' + $typeSchema.join(\",\");\n                  } else {\n                    out += '' + $typeSchema;\n                  }\n\n                  out += '\\' ';\n                }\n\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n\n              var __err = out;\n              out = $$outStack.pop();\n\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n\n              out += ' } ';\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' if (errors === ';\n\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + $lvl;\n            }\n\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n\n  if ($typeSchema && !$typeChecked && !(it.opts.coerceTypes && $coerceToTypes)) {\n    var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n    out += ' if (' + it.util[$method]($typeSchema, $data, true) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    /* istanbul ignore else */\n\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n      if ($typeIsArray) {\n        out += '' + $typeSchema.join(\",\");\n      } else {\n        out += '' + $typeSchema;\n      }\n\n      out += '\\' } ';\n\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should be ';\n\n        if ($typeIsArray) {\n          out += '' + $typeSchema.join(\",\");\n        } else {\n          out += '' + $typeSchema;\n        }\n\n        out += '\\' ';\n      }\n\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n\n    var __err = out;\n    out = $$outStack.pop();\n\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n\n    out += ' }';\n  }\n\n  if ($breakOnError) {\n    out += ' ' + $closingBraces2 + ' ';\n  }\n\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return true;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + $valid + ' = errors === errs_' + $lvl + ';';\n  }\n\n  out = it.util.cleanUpCode(out);\n\n  if ($top && $breakOnError) {\n    out = it.util.cleanUpVarErrors(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    for (var i = 0; i < $rulesGroup.rules.length; i++) if ($shouldUseRule($rulesGroup.rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || $rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || it.schema.patternProperties && Object.keys(it.schema.patternProperties).length || it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length);\n  }\n\n  return out;\n};","map":{"version":3,"sources":["C:/Users/juanm/Documents/Proyecto_web/ProyectoFinal-IAW/cuotasapp/node_modules/mercadopago/node_modules/ajv/lib/dotjs/validate.js"],"names":["module","exports","generate_validate","it","$keyword","out","$async","schema","isTop","$top","$lvl","level","$dataLvl","dataLevel","$data","rootId","resolve","fullPath","root","id","baseId","async","$es7","opts","yieldAwait","dataPathArr","undefined","url","Error","$valid","$breakOnError","allErrors","$closingBraces1","$closingBraces2","$errorKeyword","$typeSchema","type","$typeIsArray","Array","isArray","coerceTypes","$coerceToTypes","util","coerceToTypes","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$method","$dataType","$coerced","$bracesCoercion","arr1","$type","$i","l1","length","$$outStack","push","createErrors","errorPath","toQuotedString","join","messages","verbose","__err","pop","compositeRule","$parentData","$dataProperty","$refKeywords","$ref","schemaHasRulesExcept","RULES","all","extendRefs","console","log","code","arr2","$rulesGroup","i2","l2","$shouldUseGroup","checkDataType","useDefaults","properties","$schema","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","default","$passData","getProperty","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","keyword","$typeChecked","cleanUpCode","cleanUpVarErrors","i","additionalProperties","patternProperties","v5","patternGroups"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword) {\n  var out = '';\n  var $async = it.schema.$async === true;\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.root.schema.id);\n    it.baseId = it.baseId || it.rootId;\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async == 'co*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data;';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '',\n    $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.coerceTypes) {\n    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    if ($coerceToTypes) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';\n      var $dataType = 'dataType' + $lvl,\n        $coerced = 'coerced' + $lvl;\n      out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n      if (it.opts.coerceTypes == 'array') {\n        out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n      }\n      out += ' var ' + ($coerced) + ' = undefined; ';\n      var $bracesCoercion = '';\n      var arr1 = $coerceToTypes;\n      if (arr1) {\n        var $type, $i = -1,\n          l1 = arr1.length - 1;\n        while ($i < l1) {\n          $type = arr1[$i += 1];\n          if ($i) {\n            out += ' if (' + ($coerced) + ' === undefined) { ';\n            $bracesCoercion += '}';\n          }\n          if (it.opts.coerceTypes == 'array' && $type != 'array') {\n            out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n          }\n          if ($type == 'string') {\n            out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n          } else if ($type == 'number' || $type == 'integer') {\n            out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n            if ($type == 'integer') {\n              out += ' && !(' + ($data) + ' % 1)';\n            }\n            out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n          } else if ($type == 'boolean') {\n            out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n          } else if ($type == 'null') {\n            out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n            out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n          }\n        }\n      }\n      out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should be ';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } else { ';\n      if ($dataLvl) {\n        var $parentData = 'data' + (($dataLvl - 1) || ''),\n          $dataProperty = it.dataPathArr[$dataLvl];\n        out += ' ' + ($data) + ' = ' + ($parentData) + '[' + ($dataProperty) + '] = ' + ($coerced) + '; ';\n      } else {\n        out += ' data = ' + ($coerced) + '; if (parentData !== undefined) parentData[parentDataProperty] = ' + ($coerced) + '; ';\n      }\n      out += ' } } ';\n    }\n  }\n  var $refKeywords;\n  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs == 'ignore') {\n      $refKeywords = false;\n      console.log('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs !== true) {\n      console.log('$ref: all keywords used in schema at path \"' + it.errSchemaPath + '\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                out += ' ' + ($rule.code(it, $rule.keyword)) + ' ';\n                if ($breakOnError) {\n                  $closingBraces1 += '}';\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type) {\n              var $typeChecked = true;\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($typeSchema && !$typeChecked && !(it.opts.coerceTypes && $coerceToTypes)) {\n    var $schemaPath = it.schemaPath + '.type',\n      $errSchemaPath = it.errSchemaPath + '/type',\n      $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n      if ($typeIsArray) {\n        out += '' + ($typeSchema.join(\",\"));\n      } else {\n        out += '' + ($typeSchema);\n      }\n      out += '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should be ';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return true;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top && $breakOnError) {\n    out = it.util.cleanUpVarErrors(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    for (var i = 0; i < $rulesGroup.rules.length; i++)\n      if ($shouldUseRule($rulesGroup.rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length) || (it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length)));\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}